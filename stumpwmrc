;; -*-lisp-*-
(in-package :stumpwm)

;(run-shell-command "xmodmap ~/.Xmodmap")
;(run-shell-command "xrdb -merge ~/.Xresources")

;(set-font "-misc-dejavu serif-bold-r-normal-*-*-120-100-100-p-0-*-uni")
;(set-font "-winitzki-proof-medium-r-normal--17-120-100-100-c-0-koi8-r")
(set-font "-*-liberation mono-bold-r-*-*-13-*-*-*-*-*-iso10646-*")

(set-prefix-key (kbd "H-SPC"))

(defparameter *foreground-color* "darkorange")
(defparameter *background-color* "black")
(defparameter *border-color* *foreground-color*)

(setf *format-time-string-default* "%a %b %e %k:%M")
(setf *default-desktop* "~/.desktop-big")
(setf *default-xterm* "urxvt")

;(run-shell-command ". ~/.aliases")

;; (setf *mpd-port* 2100)
;; (setf *mpd-volume-step* 10)

;;; Internal function definitions.

;; Found at:
;; http://en.wikipedia.org/wiki/User:Gwern/.stumpwmrc
(defun cat (&rest strings) "A shortcut for (concatenate 'string foo bar)."
  (apply 'concatenate 'string strings))

;;; Theme.

;; Window border colors.
(set-focus-color *foreground-color*)
(set-unfocus-color *background-color*)

;; Input box colors.
(set-fg-color *foreground-color*)
(set-bg-color *background-color*)
(set-border-color *border-color*)

;; Modeline colors.
(setf *mode-line-foreground-color* *foreground-color*)
(setf *mode-line-background-color* *background-color*)
(setf *mode-line-border-color* *border-color*)

;; Background.
(run-shell-command (cat "xsetroot -solid " *background-color*))

(defcommand default-xterm () ()
  "run default xterm program"
  (run-shell-command *default-xterm*))

(defcommand emacs () ()
  "run emacs"
  (run-or-raise "emacs" '(:title "emacs")))

(defcommand browser () ()
  "run Seamonkey"
  (run-or-raise "seamonkey" '(:title "SeaMonkey")))

(defcommand run-rss-reader () ()
  "run Liferea"
  (run-or-raise "liferea" '(:title "Liferea")))

(defcommand zik () ()
  "run ncmpcpp"
  (run-or-raise
   (cat "LANG=en_US.UTF-8 "
	*default-xterm*
	" -tn xterm -fg green -bg black -name ncmpcpp -e ncmpcpp")
   '(:instance "ncmpcpp")))

(defcommand alsamixer () ()
  "run alsamixer"
  (run-or-raise
   (cat "LANG=en_US.UTF-8 "
	*default-xterm*
	" -tn xterm -fg darkorange -bg black -name alsamixer -e alsamixer")
   ;; "xterm -fs 12 -fg darkorange -bg black -fa terminal:style=bold -name alsamixer -e alsamixer"
   '(:instance "alsamixer")))

(defcommand toggle-front-speaker () ()
  "Toggle mute/unmute the front speaker"
  (run-shell-command "amixer sset Speaker Playback toggle" ()))

(defcommand increase-master-volume () ()
  "Increase the master volume"
  (run-shell-command "amixer sset Master Playback 3%+" ()))

(defcommand decrease-master-volume () ()
  "Decrease the master volume"
  (run-shell-command "amixer sset Master Playback 3%-" ()))

(defcommand toggle-ncmpcpp () ()
  "Toggle play/pause for ncmpcpp"
  (run-shell-command "ncmpcpp toggle" ()))

(defcommand mail () ()
  "run claws-mail"
  (run-or-raise "claws-mail" '(:title "Claws Mail")))

(defcommand run-spotify () ()
  "run spotify without Wine"
  (run-or-raise "spotify" '(:title "Spotify")))

;; Next two sweet commands stolen from http://www.xsteve.at/prg/stumpwm/
(defcommand xterm-1 () ()
  "run an xterm instance"
  (run-or-raise
   "urxvt -fg green -bg black -name xterm1"
   '(:instance "xterm1")))

(defcommand xterm-2 () ()
  "run an xterm instance"
  (run-or-raise
   "urxvt -fg cyan -bg black -name xterm2 -e screen"
   '(:instance "xterm2")))

(defcommand dlock () ()
  "run dlock"
  (run-shell-command "dlock"))

(defcommand image-viewer () ()
  "start geeqie"
  (run-or-raise "geeqie" '(:title "Geeqie")))

(defcommand image-editor () ()
  "start gimp"
  (run-or-raise "gimp" '(:title "gimp")))

(defcommand chemdraw () ()
  "start chemtool"
  (run-or-raise "chemtool" '(:title "Chemtool")))

(defcommand pdf-viewer () ()
  "start xpdf"
  (run-or-raise "xpdf" '(:title "Xpdf")))

(defcommand calculator () ()
  "start xcalc"
  (run-or-raise "xcalc" '(:title "Calculator")))

;; Use softlink command from /usr/bin because the version number on
;; the /opt executable changes
(defcommand office-suite () ()
  "start LibreOffice"
  (run-or-raise "soffice" '(:title "LibreOffice")))

(defcommand remap-keyboard (map)
  ((:string "New keyboard mapping: "))
  "use xsetkbmap"
  (run-shell-command (cat "dsetxkbmap " map)))

(defcommand default-desktop () ()
	    "restore desktop windows"
	    (restore-from-file *default-desktop*))

;; Turn on the modeline
(if (not (head-mode-line (current-head)))
    (toggle-mode-line (current-screen) (current-head)))

;; Show the time in the modeline
(setf *screen-mode-line-format*
      (list '(:eval (run-shell-command
		     "date '+%R, %F %a'|tr -d [:cntrl:]" t)) " | [^B%n^b] %W")) 

;; Set up X cursor and colors.
(run-shell-command (cat "xsetroot -cursor_name left_ptr -fg "
			*background-color* ; Cursor body
			" -bg " *border-color*)) ; Cursor outline

;; Keep the X cursor out of the way.
;; (run-shell-command "unclutter -idle 5 -jitter 5 -root")

(define-key *top-map* (kbd "F5") "toggle-ncmpcpp")
(define-key *top-map* (kbd "F10") "toggle-front-speaker")
(define-key *top-map* (kbd "F11") "decrease-master-volume")
(define-key *top-map* (kbd "F12") "increase-master-volume")
(define-key *top-map* (kbd "H-1") "xterm-1")
(define-key *top-map* (kbd "H-2") "xterm-2")
(define-key *top-map* (kbd "H-Up") "move-focus up")
(define-key *top-map* (kbd "H-Down") "move-focus down")
(define-key *top-map* (kbd "H-Right") "move-focus right")
(define-key *top-map* (kbd "H-Left") "move-focus left")
(define-key *top-map* (kbd "H-i") "gselect images")
(define-key *top-map* (kbd "H-b") "gselect browser")
(define-key *top-map* (kbd "H-d") "gselect Default")
(define-key *top-map* (kbd "H-o") "gselect pdf")
(define-key *top-map* (kbd "H-KP_End") "xterm-1")
(define-key *top-map* (kbd "H-KP_Down") "xterm-2")

(define-key *root-map* (kbd "H-e") "loadrc")
(define-key *root-map* (kbd "H-c") "mail")
(define-key *root-map* (kbd "H-i") "image-viewer")
(define-key *root-map* (kbd "H-s") "browser")
(define-key *root-map* (kbd "H-v") "alsamixer")
(define-key *root-map* (kbd "t") "chemdraw")
(define-key *root-map* (kbd "I") "image-editor")
(define-key *root-map* (kbd "H-m") "zik")
(define-key *root-map* (kbd "H-n") "gnext")
(define-key *root-map* (kbd "H-p") "gprev")
(define-key *root-map* (kbd "H-o") "pdf-viewer")
(define-key *root-map* (kbd "O") "office-suite")
(define-key *root-map* (kbd "/") "calculator")
(define-key *root-map* (kbd "H-0") "remap-keyboard us")
(define-key *root-map* (kbd "H-9") "remap-keyboard ru")
(define-key *root-map* (kbd "H-8") "remap-keyboard latam")
(define-key *root-map* (kbd "H-7") "remap-keyboard de")
(define-key *root-map* (kbd "H-6") "remap-keyboard ara")
(define-key *root-map* (kbd "H-u") "gselect bsd")
(define-key *root-map* (kbd "H-f") "run-spotify")
(define-key *root-map* (kbd "H-l") "run-rss-reader")
(define-key *root-map* (kbd "H-r") "default-desktop")
(define-key *root-map* (kbd "c") "default-xterm")

(hsplit)
(xterm-1)
(run-shell-command "exec emacs")
(gnewbg "browser")
(gnewbg "images")
(gnewbg "pdf")
;;(restore-from-file "/home/derek/.desktop-work")
(run-shell-command "exec xscreensaver -nosplash")
